name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set outputs
        id: vars
        run: |
          DOCKERFILE_VERSION=$(docker build --build-arg DOCKERFILE_VERSION=${DOCKERFILE_VERSION} -q .)
          VERSION_ODIN=$(docker build --build-arg VERSION_ODIN=${VERSION_ODIN} -q .)
          VERSION_THOR=$(docker build --build-arg VERSION_THOR=${VERSION_THOR} -q .)

          echo "DOCKERFILE_VERSION=$DOCKERFILE_VERSION" >> $GITHUB_ENV
          echo "VERSION_ODIN=$VERSION_ODIN" >> $GITHUB_ENV
          echo "VERSION_THOR=$VERSION_THOR" >> $GITHUB_ENV
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: |
      #       ${{ secrets.DOCKERHUB_USERNAME }}/action-test:${{ env.DOCKERFILE_VERSION }}
      #       ${{ secrets.DOCKERHUB_USERNAME }}/action-test:latest

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.DOCKERFILE_VERSION }}
          release_name: Release ${{ env.DOCKERFILE_VERSION }}
          body: |
            Changes in this Release
            - Version Odin: ${{ env.VERSION_ODIN }}
            - Version Thor: ${{ env.VERSION_THOR }}
          draft: false
          prerelease: false


